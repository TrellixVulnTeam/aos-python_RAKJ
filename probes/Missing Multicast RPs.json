{
  "label": "Missing Multicast RPs",
  "processors": [
    {
      "inputs": {},
      "type": "generic_data_collector",
      "name": "Collect PIM RP per VRF and groups",
      "outputs": {
        "out": "pim_rp_config"
      },
      "properties": {
        "graph_query": "match(node('system', name='system', role=is_in(['leaf', 'spine']), deploy_mode='deploy').out('hosted_sz_instances').node('sz_instance').in_('instantiated_by'). node('security_zone', name='sz').in_('sz').node('multicast_policy').out('rp').node('rendezvous_point', name='rp').out('anycast_interface').node('interface', name='anycast_ip'))",
        "data_type": "dss",
        "service_interval": "120",
        "service_name": "pim_rp",
        "execution_count": "-1",
        "system_id": "system.system_id",
        "service_input": "\"\"",
        "key": "'%s|%s|%s' % (sz.vrf_name, anycast_ip.ipv4_addr.split('/')[0], '|'.join(sorted(rp.group_addr_ranges)))",
        "enable_streaming": false,
        "value_map": {
          "0": "absent",
          "1": "present"
        }
      }
    },
    {
      "inputs": {
        "in": "pim_rp_config"
      },
      "type": "state_check",
      "name": "Check presence of expected RP",
      "outputs": {
        "out": "missing_rp"
      },
      "properties": {
        "enable_streaming": false,
        "state": "'absent'",
        "raise_anomaly": true,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "missing_rp"
      },
      "type": "accumulate",
      "name": "Missing RP anomaly History",
      "outputs": {
        "out": "missing_rp_anomaly_history"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 50,
        "graph_query": [],
        "total_duration": 0
      }
    }
  ]
}