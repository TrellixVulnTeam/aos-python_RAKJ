{
  "label": "Counter Errors",
  "processors": [
    {
      "inputs": {},
      "type": "if_counter",
      "name": "Interface alignment_errors_per_second",
      "outputs": {
        "out": "Interface alignment_errors_per_second"
      },
      "properties": {
        "graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy', role=is_in(['leaf', 'spine', 'external_router'])).out('hosted_interfaces').node('interface', if_type=is_in(['ip','ethernet']), name='interface').out('link').node('link').in_('link').node('interface').in_('hosted_interfaces').node('system', name='system2')).ensure_different('system', 'system2')",
        "metric": "'alignment_errors_per_second'",
        "interface": "interface.if_name",
        "system_id": "system.system_id",
        "enable_streaming": false,
        "interface_desc": "interface.description or 'facing %s' % (system2.hostname or system2.label or system2.role)",
        "counter_type": "alignment_errors_per_second"
      }
    },
    {
      "inputs": {},
      "type": "if_counter",
      "name": "Interface fcs_errors_per_second",
      "outputs": {
        "out": "Interface fcs_errors_per_second"
      },
      "properties": {
        "graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy', role=is_in(['leaf', 'spine', 'external_router'])).out('hosted_interfaces').node('interface', if_type=is_in(['ip','ethernet']), name='interface').out('link').node('link').in_('link').node('interface').in_('hosted_interfaces').node('system', name='system2')).ensure_different('system', 'system2')",
        "metric": "'fcs_errors_per_second'",
        "interface": "interface.if_name",
        "system_id": "system.system_id",
        "enable_streaming": false,
        "interface_desc": "interface.description or 'facing %s' % (system2.hostname or system2.label or system2.role)",
        "counter_type": "fcs_errors_per_second"
      }
    },
    {
      "inputs": {},
      "type": "if_counter",
      "name": "Interface giants_per_second",
      "outputs": {
        "out": "Interface giants_per_second"
      },
      "properties": {
        "graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy', role=is_in(['leaf', 'spine', 'external_router'])).out('hosted_interfaces').node('interface', if_type=is_in(['ip','ethernet']), name='interface').out('link').node('link').in_('link').node('interface').in_('hosted_interfaces').node('system', name='system2')).ensure_different('system', 'system2')",
        "metric": "'giants_per_second'",
        "interface": "interface.if_name",
        "system_id": "system.system_id",
        "enable_streaming": false,
        "interface_desc": "interface.description or 'facing %s' % (system2.hostname or system2.label or system2.role)",
        "counter_type": "giants_per_second"
      }
    },
    {
      "inputs": {},
      "type": "if_counter",
      "name": "Interface runts_per_second",
      "outputs": {
        "out": "Interface runts_per_second"
      },
      "properties": {
        "graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy', role=is_in(['leaf', 'spine', 'external_router'])).out('hosted_interfaces').node('interface', if_type=is_in(['ip','ethernet']), name='interface').out('link').node('link').in_('link').node('interface').in_('hosted_interfaces').node('system', name='system2')).ensure_different('system', 'system2')",
        "metric": "'runts_per_second'",
        "interface": "interface.if_name",
        "system_id": "system.system_id",
        "enable_streaming": false,
        "interface_desc": "interface.description or 'facing %s' % (system2.hostname or system2.label or system2.role)",
        "counter_type": "runts_per_second"
      }
    },
    {
      "inputs": {},
      "type": "if_counter",
      "name": "Interface rx_error_pps",
      "outputs": {
        "out": "Interface rx_error_pps"
      },
      "properties": {
        "graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy', role=is_in(['leaf', 'spine', 'external_router'])).out('hosted_interfaces').node('interface', if_type=is_in(['ip','ethernet']), name='interface').out('link').node('link').in_('link').node('interface').in_('hosted_interfaces').node('system', name='system2')).ensure_different('system', 'system2')",
        "metric": "'rx_error_pps'",
        "interface": "interface.if_name",
        "system_id": "system.system_id",
        "enable_streaming": false,
        "interface_desc": "interface.description or 'facing %s' % (system2.hostname or system2.label or system2.role)",
        "counter_type": "rx_error_pps"
      }
    },
    {
      "inputs": {},
      "type": "if_counter",
      "name": "Interface tx_error_pps",
      "outputs": {
        "out": "Interface tx_error_pps"
      },
      "properties": {
        "graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy', role=is_in(['leaf', 'spine', 'external_router'])).out('hosted_interfaces').node('interface', if_type=is_in(['ip','ethernet']), name='interface').out('link').node('link').in_('link').node('interface').in_('hosted_interfaces').node('system', name='system2')).ensure_different('system', 'system2')",
        "metric": "'tx_error_pps'",
        "interface": "interface.if_name",
        "system_id": "system.system_id",
        "enable_streaming": false,
        "interface_desc": "interface.description or 'facing %s' % (system2.hostname or system2.label or system2.role)",
        "counter_type": "tx_error_pps"
      }
    },
    {
      "inputs": {
        "in": "Interface alignment_errors_per_second"
      },
      "type": "accumulate",
      "name": "History of interface alignment_errors_per_second",
      "outputs": {
        "out": "History of interface alignment_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 800,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Interface fcs_errors_per_second"
      },
      "type": "accumulate",
      "name": "History of interface fcs_errors_per_second",
      "outputs": {
        "out": "History of interface fcs_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 800,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Interface giants_per_second"
      },
      "type": "accumulate",
      "name": "History of interface giants_per_second",
      "outputs": {
        "out": "History of interface giants_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 800,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Interface runts_per_second"
      },
      "type": "accumulate",
      "name": "History of interface runts_per_second",
      "outputs": {
        "out": "History of interface runts_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 800,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Interface rx_error_pps"
      },
      "type": "accumulate",
      "name": "History of interface rx_error_pps",
      "outputs": {
        "out": "History of interface rx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 800,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Interface tx_error_pps"
      },
      "type": "accumulate",
      "name": "History of interface tx_error_pps",
      "outputs": {
        "out": "History of interface tx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 800,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "History of interface alignment_errors_per_second"
      },
      "type": "range_check",
      "name": "Has alignment_errors_per_second",
      "outputs": {
        "out": "Has alignment_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "min": 1
        },
        "raise_anomaly": true,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "History of interface fcs_errors_per_second"
      },
      "type": "range_check",
      "name": "Has fcs_errors_per_second",
      "outputs": {
        "out": "Has fcs_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "min": 1
        },
        "raise_anomaly": true,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "History of interface giants_per_second"
      },
      "type": "range_check",
      "name": "Has giants_per_second",
      "outputs": {
        "out": "Has giants_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "min": 1
        },
        "raise_anomaly": true,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "History of interface runts_per_second"
      },
      "type": "range_check",
      "name": "Has runts_per_second",
      "outputs": {
        "out": "Has runts_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "min": 1
        },
        "raise_anomaly": true,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "History of interface rx_error_pps"
      },
      "type": "range_check",
      "name": "Has rx_error_pps",
      "outputs": {
        "out": "Has rx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "min": 1
        },
        "raise_anomaly": true,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "History of interface tx_error_pps"
      },
      "type": "range_check",
      "name": "Has tx_error_pps",
      "outputs": {
        "out": "Has tx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "min": 1
        },
        "raise_anomaly": true,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "Has alignment_errors_per_second"
      },
      "type": "accumulate",
      "name": "Anomaly history of alignment_errors_per_second",
      "outputs": {
        "out": "Anomaly history of alignment_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 50,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Has fcs_errors_per_second"
      },
      "type": "accumulate",
      "name": "Anomaly history of fcs_errors_per_second",
      "outputs": {
        "out": "Anomaly history of fcs_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 50,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Has giants_per_second"
      },
      "type": "accumulate",
      "name": "Anomaly history of giants_per_second",
      "outputs": {
        "out": "Anomaly history of giants_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 50,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Has runts_per_second"
      },
      "type": "accumulate",
      "name": "Anomaly history of runts_per_second",
      "outputs": {
        "out": "Anomaly history of runts_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 50,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Has rx_error_pps"
      },
      "type": "accumulate",
      "name": "Anomaly history of rx_error_pps",
      "outputs": {
        "out": "Anomaly history of rx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 50,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Has tx_error_pps"
      },
      "type": "accumulate",
      "name": "Anomaly history of tx_error_pps",
      "outputs": {
        "out": "Anomaly history of tx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "max_samples": 50,
        "graph_query": [],
        "total_duration": 0
      }
    },
    {
      "inputs": {
        "in": "Has alignment_errors_per_second"
      },
      "type": "match_count",
      "name": "Summary of alignment_errors_per_second",
      "outputs": {
        "out": "Summary of alignment_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "group_by": [
          "metric"
        ],
        "reference_state": "true"
      }
    },
    {
      "inputs": {
        "in": "Has fcs_errors_per_second"
      },
      "type": "match_count",
      "name": "Summary of fcs_errors_per_second",
      "outputs": {
        "out": "Summary of fcs_errors_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "group_by": [
          "metric"
        ],
        "reference_state": "true"
      }
    },
    {
      "inputs": {
        "in": "Has giants_per_second"
      },
      "type": "match_count",
      "name": "Summary of giants_per_second",
      "outputs": {
        "out": "Summary of giants_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "group_by": [
          "metric"
        ],
        "reference_state": "true"
      }
    },
    {
      "inputs": {
        "in": "Has runts_per_second"
      },
      "type": "match_count",
      "name": "Summary of runts_per_second",
      "outputs": {
        "out": "Summary of runts_per_second"
      },
      "properties": {
        "enable_streaming": false,
        "group_by": [
          "metric"
        ],
        "reference_state": "true"
      }
    },
    {
      "inputs": {
        "in": "Has rx_error_pps"
      },
      "type": "match_count",
      "name": "Summary of rx_error_pps",
      "outputs": {
        "out": "Summary of rx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "group_by": [
          "metric"
        ],
        "reference_state": "true"
      }
    },
    {
      "inputs": {
        "in": "Has tx_error_pps"
      },
      "type": "match_count",
      "name": "Summary of tx_error_pps",
      "outputs": {
        "out": "Summary of tx_error_pps"
      },
      "properties": {
        "enable_streaming": false,
        "group_by": [
          "metric"
        ],
        "reference_state": "true"
      }
    }
  ]
}