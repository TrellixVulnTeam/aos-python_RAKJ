{"label": "Multicast - Anycast RP ", "processors": [{"inputs": {}, "type": "generic_data_collector", "name": "Anycast Peers", "outputs": {"out": "anycast_peers"}, "properties": {"graph_query": "match(node('security_zone', name='sz').in_('sz').node('multicast_policy').out('rp').node('rendezvous_point', name='rp').out('anycast_interface').node('interface', name='anycast_ip').in_('hosted_interfaces').node('system', name='system'),node(name='rp').out('member_interfaces').node('interface', name='peer'),node(name='system').out('hosted_sz_instances').node('sz_instance').in_('instantiated_by').node('security_zone', name='sz'))", "data_type": "dss", "service_interval": "120", "service_name": "anycast_rp", "execution_count": "-1", "system_id": "system.system_id", "service_input": "\"\"", "key": "'%s|%s|peer|%s' % (sz.vrf_name, anycast_ip.ipv4_addr.split('/')[0], peer.ipv4_addr.split('/')[0])", "enable_streaming": false, "value_map": {"0": "absent", "1": "present"}}}, {"inputs": {"in": "anycast_peers"}, "type": "state_check", "name": "Check anycast peers", "outputs": {"out": "anycast_peers_absent"}, "properties": {"enable_streaming": false, "state": "'absent'", "raise_anomaly": true, "graph_query": []}}, {"inputs": {"in": "anycast_peers_absent"}, "type": "accumulate", "name": "Anycast RP Peer Anomaly History", "outputs": {"out": "anycast_rp_peer_anomaly_history"}, "properties": {"enable_streaming": false, "max_samples": 50, "graph_query": [], "total_duration": 0}}], "disabled": true}