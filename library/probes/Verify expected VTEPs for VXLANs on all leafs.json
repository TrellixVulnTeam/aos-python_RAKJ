{"label": "Overlay - Verify expected VTEPs for VXLANs on all leafs", "processors": [{"inputs": {}, "type": "generic_data_collector", "name": "Collect configured VTEPs", "outputs": {"out": "vlan_vtep_status"}, "properties": {"graph_query": "match(node('system', name='leaf', role='leaf', deploy_mode='deploy').out('hosted_vn_instances').node('vn_instance', name='vni').out('instantiates').node('virtual_network', name='vn', vn_type='vxlan'),node('system', name='remote_leaf', role='leaf', deploy_mode='deploy').out('hosted_vn_instances').node('vn_instance').out('instantiates').node('virtual_network', name='vn'),node('system', name='leaf').out('hosted_interfaces').node('interface', name='logical_vtep', if_type='logical_vtep', ipv4_addr=not_none()),node('system', name='remote_leaf').out('hosted_interfaces').node('interface', name='remote_logical_vtep', if_type='logical_vtep', ipv4_addr=not_none())).ensure_different('leaf', 'remote_leaf').ensure_different('logical_vtep', 'remote_logical_vtep').select('leaf', 'remote_leaf', 'vn', 'vni', 'remote_logical_vtep').distinct(['leaf', 'vni', 'remote_logical_vtep'])", "data_type": "dss", "service_interval": "120", "service_name": "vxlan_info", "vni": "vn.vn_id", "execution_count": "-1", "system_id": "leaf.system_id", "service_input": "\"\"", "key": "'vlan=%s|vtep=%s' % (vni.vlan_id, remote_logical_vtep.ipv4_addr.split('/')[0])", "enable_streaming": false, "remote_leaf": "remote_leaf.hostname", "value_map": {"0": "absent", "1": "present"}}}, {"inputs": {"in": "vlan_vtep_status"}, "type": "state_check", "name": "Check prsence of expected VTEPs per VLAN", "outputs": {"out": "missing_vlan_vteps"}, "properties": {"enable_streaming": false, "state": "'absent'", "raise_anomaly": true, "graph_query": []}}, {"inputs": {"in": "missing_vlan_vteps"}, "type": "accumulate", "name": "Missing VTEPs anomaly history", "outputs": {"out": "Missing VTEPs anomaly_history"}, "properties": {"enable_streaming": false, "max_samples": 50, "graph_query": [], "total_duration": 0}}], "disabled": true}