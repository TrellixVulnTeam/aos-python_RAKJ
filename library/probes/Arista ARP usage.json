{"label": "Capacity_Planning -  ARP usage", "processors": [{"inputs": {}, "type": "generic_data_collector", "name": "ARP Breakdown per VRF", "outputs": {"out": "arp_breakdown"}, "properties": {"graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy').out('interface_map').node('interface_map').out('device_profile').node('device_profile',name='device_type_node').where(lambda device_type_node: 'Arista'.lower() in device_type_node.label.lower()))", "data_type": "ts", "service_interval": "120", "service_name": "table_usage", "device_type": "device_type_node.label", "execution_count": "-1", "system_id": "system.system_id", "service_input": "\"\"", "key": "'arp_entries'", "enable_streaming": false}}, {"inputs": {}, "type": "generic_data_collector", "name": "ARP count collector", "outputs": {"out": "arp_table_usage"}, "properties": {"graph_query": "match(node('system', name='system', system_id=not_none(), deploy_mode='deploy').out('interface_map').node('interface_map').out('device_profile').node('device_profile',name='device_type_node').where(lambda device_type_node: 'Arista'.lower() in device_type_node.label.lower()))", "data_type": "ns", "service_interval": "120", "service_name": "table_usage", "device_type": "device_type_node.label", "execution_count": "-1", "system_id": "system.system_id", "service_input": "\"\"", "key": "'total|num_arp_entries'", "enable_streaming": false}}, {"inputs": {"in": "arp_table_usage"}, "type": "range_check", "name": "Check if arp table usage exceeds threshold", "outputs": {"out": "arp_table_overloaded_systems"}, "properties": {"enable_streaming": false, "property": "value", "range": {"min": 10000001}, "raise_anomaly": true, "graph_query": []}}], "disabled": true}