{"label": "Virtual_Infra - Hypervisor redundancy checks", "description": "Detect single point of failures in hypervisor connectivity", "processors": [{"inputs": {}, "type": "generic_graph_collector", "name": "Hypervisor and connected leaf", "outputs": {"out": "hypervisor_and_leaf"}, "properties": {"leaf": "leaf.hostname", "graph_query": ["match(node('hypervisor', name='hv').out('has').node('pnic').out('is_realized_by').node('interface', name='server_intf').out('link').node('link').in_('link').node('interface', name='leaf_intf').in_('hosted_interfaces').node('system', name='leaf', system_id=not_none()).out('part_of_rack').node('rack', name='rack').ensure_different('server_intf', 'leaf_intf')).select('hv', 'leaf', 'rack').distinct()"], "data_type": "ts", "hypervisor_id": "hv.id", "hypervisor": "hv.label", "value": "'N/A'", "enable_streaming": false, "rack": "rack.label"}}, {"inputs": {}, "type": "generic_graph_collector", "name": "Hypervisor pnic and vnet", "outputs": {"out": "hypervisor_pnic_vnet"}, "properties": {"graph_query": ["match(node('hypervisor', name='hv').out('has').node('pnic', name='pnic').out('carries').node('vnet', name='vnet'))"], "data_type": "ts", "hypervisor_id": "hv.id", "hypervisor": "hv.label", "vnet_type": "vnet.vn_type", "value": "'N/A'", "carried_by_pnic": "pnic.label", "vlan_or_vni": "vnet.vlan if vnet.vn_type == 'vlan' else vnet.vni", "vnet": "vnet.label", "vnet_id": "vnet.id", "enable_streaming": false}}, {"inputs": {"in": "hypervisor_and_leaf"}, "type": "set_count", "name": "Hypervisor and leaf count", "outputs": {"out": "hypervisors_leaf_count"}, "properties": {"enable_streaming": false, "group_by": ["hypervisor_id", "hypervisor", "rack"]}}, {"inputs": {"in": "hypervisor_pnic_vnet"}, "type": "set_count", "name": "Hypervisor vnet pnic count", "outputs": {"out": "hypervisors_vnet_pnic_count"}, "properties": {"enable_streaming": false, "group_by": ["hypervisor_id", "hypervisor", "vnet_id", "vnet", "vnet_type", "vlan_or_vni"]}}, {"inputs": {"in": "hypervisors_leaf_count"}, "type": "range_check", "name": "Hypervisors without ToR Switch redundancy", "outputs": {"out": "hypervisor_single_leaf_anomaly"}, "properties": {"enable_streaming": false, "property": "value", "range": {"max": 1}, "raise_anomaly": true, "graph_query": []}}, {"inputs": {"in": "hypervisors_vnet_pnic_count"}, "type": "range_check", "name": "Networks without link redundancy", "outputs": {"out": "hypervisor_vnet_single_pnic_anomaly"}, "properties": {"enable_streaming": false, "property": "value", "range": {"max": 1}, "raise_anomaly": true, "graph_query": []}}], "disabled": true}