{"label": "Fault_Tolerance  - Link fault tolerance in server LAGs", "description": "Find out if failure of one link in a server LAG is going to be tolerated. Monitoring total traffic in each LAG against total available capacity of the bond, with one link failure. Raise anomaly if there is any persistent fault intolerant bonds", "processors": [{"inputs": {}, "type": "if_counter", "name": "Leaf interface rx", "outputs": {"out": "Leaf interface rx"}, "properties": {"graph_query": "node('system', name='server',role='l2_server').out('hosted_interfaces').node('interface', name='server_bond', if_type='port_channel').out('composed_of').node('interface',name='server_intf').out('link').node('link', name='link').in_('link').node('interface',name='leaf_intf').in_('hosted_interfaces').node('system', name='leaf',     role=is_in(['leaf', 'access']),deploy_mode='deploy').out('part_of_rack').node('rack', name='rack')", "server_bond": "str(server_bond.description)", "server_bond_id": "str(server_bond.id)", "interface": "leaf_intf.if_name", "system_id": "leaf.system_id", "enable_streaming": false, "server": "str(server.hostname or server.label)", "speed": "str(link.speed)", "rack": "str(rack.label)", "counter_type": "rx_bps"}}, {"inputs": {"in": "Leaf interface rx"}, "type": "periodic_average", "name": "Average leaf interface rx", "outputs": {"out": "Average leaf interface rx"}, "properties": {"enable_streaming": false, "period": 60, "graph_query": []}}, {"inputs": {"in": "Average leaf interface rx"}, "type": "sum", "name": "Total traffic per server bond", "outputs": {"out": "Total traffic per server bond"}, "properties": {"enable_streaming": false, "group_by": ["server", "server_bond", "server_bond_id", "speed", "rack"]}}, {"inputs": {"in": "Total traffic per server bond"}, "type": "range_check", "name": "Check tolerance threshold", "outputs": {"out": "Fault intolerant server bonds"}, "properties": {"graph_query": ["node('system', name='server',role='l2_server').out('hosted_interfaces').node('interface', name='server_bond', if_type='port_channel').out('composed_of').node('interface',name='server_intf').out('link').node('link', name='link').in_('link').node('interface',name='leaf_intf').in_('hosted_interfaces').node('system', name='leaf',     role=is_in(['leaf', 'access']),deploy_mode='deploy').out('part_of_rack').node('rack', name='rack')"], "anomaly_retention_size": 1073741824, "anomaly_retention_duration": 86400, "range": {"min": "(len([qr for qr in query_result if qr['server_bond'].id == context.server_bond_id])-1) * functions.speed_to_bits(context.speed)"}, "raise_anomaly": false, "enable_streaming": false, "property": "value", "enable_anomaly_logging": false}}, {"inputs": {"in": "Fault intolerant server bonds"}, "type": "time_in_state_check", "name": "Persistent fault intolerant bonds", "outputs": {"out": "Persistent fault intolerant bonds"}, "properties": {"time_window": 600, "graph_query": [], "anomaly_retention_size": 1073741824, "anomaly_retention_duration": 86400, "state_range": {"\"true\"": [{"min": 541}]}, "raise_anomaly": true, "enable_streaming": false, "enable_anomaly_logging": false}}, {"inputs": {"in": "Persistent fault intolerant bonds"}, "type": "match_count", "name": "Fault intolerant bonds", "outputs": {"out": "Fault intolerant bonds"}, "properties": {"enable_streaming": false, "group_by": [], "reference_state": "true"}}], "stages": [{"name": "Leaf interface rx", "retention_duration": 86400, "description": "Leaf interfaces facing server interfaces that are part of a bond. Value is ingress bits per second", "units": "bps"}, {"name": "Persistent fault intolerant bonds", "retention_duration": 86400, "description": "Bonds with total bandwidth persistently exceeding available capacity, in presence of one link failure"}, {"name": "Fault intolerant server bonds", "retention_duration": 86400, "description": "Server bonds with total bandwidth exceeding availablecapacity, in presence of one link failure"}, {"name": "Average leaf interface rx", "retention_duration": 86400}, {"name": "Total traffic per server bond", "enable_metric_logging": true, "retention_duration": 43200}, {"name": "Fault intolerant bonds", "retention_duration": 86400}], "disabled": true}