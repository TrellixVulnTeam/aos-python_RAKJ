{"label": "Virtual_Infra - Hypervisor MTU mismatch", "processors": [{"inputs": {}, "type": "generic_graph_collector", "name": "Interface MTU", "outputs": {"out": "Interface MTU"}, "properties": {"vtep": "vnic.label", "graph_query": "match(node('hypervisor', name='hv').out('has').node('vnic', name='vnic').where(lambda vnic: 'overlay' in (vnic.traffic_types or [])).out('part_of').node('vnet', name='vn'),node(name='hv').out('has').node('pnic', name='pnic').out('carries').node(name='vn'))", "data_type": "ns", "pnic_name": "pnic.label", "hypervisor": "hv.label", "value": "pnic.mtu", "enable_streaming": false}}, {"inputs": {"in": "Interface MTU"}, "type": "std_dev", "name": "Check MTU mismatch between hypervisors", "outputs": {"out": "Hypervisor MTU Deviation"}, "properties": {"enable_streaming": false, "group_by": [], "ddof": 0}}, {"inputs": {"in": "Hypervisor MTU Deviation"}, "type": "range_check", "name": "MTU Mismatch", "outputs": {"out": "MTU Mismatch"}, "properties": {"enable_streaming": false, "property": "value", "range": {"min": 1}, "raise_anomaly": true, "graph_query": []}}], "stages": [{"name": "Interface MTU", "units": "bytes"}], "disabled": true}