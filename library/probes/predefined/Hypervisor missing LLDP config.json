{
  "label": "Hypervisor missing LLDP config",
  "processors": [
    {
      "inputs": {},
      "type": "generic_graph_collector",
      "name": "Hypervisor NIC LLDP config",
      "outputs": {
        "out": "Hypervisor NIC LLDP config"
      },
      "properties": {
        "protocol": "ldp.protocol",
        "graph_query": "match(  node('hypervisor', name='hypervisor').out('has')  .node('pnic', name='pnic').out('policy')  .node('link_discovery_policy', name='ldp'))",
        "data_type": "dss",
        "hypervisor": "hypervisor.label",
        "value": "'false' if ldp.protocol == 'lldp' and ldp.operation in ['advertise', 'both'] else 'true'",
        "value_map": {
          "0": "false",
          "1": "true"
        },
        "switch_label": "ldp.label",
        "enable_streaming": false,
        "pnic": "pnic.label"
      }
    },
    {
      "inputs": {
        "in": "Hypervisor NIC LLDP config"
      },
      "type": "match_count",
      "name": "LLDP config by switch",
      "outputs": {
        "out": "LLDP config by switch"
      },
      "properties": {
        "enable_streaming": false,
        "group_by": [
          "switch_label"
        ],
        "reference_state": "true"
      }
    },
    {
      "inputs": {
        "in": "LLDP config by switch"
      },
      "type": "range_check",
      "name": "Switches missing LLDP config",
      "outputs": {
        "out": "Switches missing LLDP config anomaly"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "min": 1
        },
        "raise_anomaly": true,
        "graph_query": []
      }
    }
  ]
}