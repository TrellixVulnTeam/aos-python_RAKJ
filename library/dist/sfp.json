{
    "properties": {
        "identity": {
            "description": "Interface name followed by channel(if present) and metric name with | separator. Exclude interfaces with no transceiver or no value for metric",
            "allOf": [
                {
                    "pattern": "^[^\\|]+\\|[^\\|]+(\\|[^\\|]+)?$"
                }, 
                {
                    "oneOf": [
                        {
                            "pattern": "\\|transceiver_type$"
                        },
                        {
                            "pattern": "\\|wave_length$",
                            "description": "Unit is nm (nanometer)"
                        },
                        {
                            "pattern": "\\|media_type$"
                        }, 
                        {
                            "pattern": "\\|vendor_sn$"
                        },
                        {
                            "pattern": "\\|vendor_pn$"
                        },
                        {
                            "pattern": "\\|vendor_name$"
                        },
                        {
                            "pattern": "\\|tx_power$",
                            "description": "Unit is dBm. If value is available per channel, all channel values are included delimited by a pipe"
                        },
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?tx_power_int$",
                            "description": "Per channel tx_power is only available for Cumulus. Unit is dBm multiplied by 1000"
                        },
                        {
                            "pattern": "\\|tx_power_low_warn$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|tx_power_high_warn$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|tx_power_low_alarm$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|tx_power_high_alarm$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?tx_power_has_warn$"
                        },
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?tx_power_has_alarm$"
                        },
                        {
                            "pattern": "\\|rx_power$",
                            "description": "Unit is dBm. If value is available per channel, all channel values are included delimited by a pipe"
                        },
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?rx_power_int?$",
                            "description": "Per channel rx_power is only available for Cumulus. Unit is dBm multiplied by 1000"
                        },
                        {
                            "pattern": "\\|rx_power_low_warn$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|rx_power_high_warn$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|rx_power_low_alarm$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|rx_power_high_alarm$",
                            "description": "Unit is dBm"
                        }, 
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?rx_power_has_warn$"
                        },
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?rx_power_has_alarm$"
                        },
                        {
                            "pattern": "\\|temperature$",
                            "description": "Unit is fahrenheit"
                        }, 
                        {
                            "pattern": "\\|temperature_low_warn$",
                            "description": "Unit is fahrenheit"
                        }, 
                        {
                            "pattern": "\\|temperature_high_warn$",
                            "description": "Unit is fahrenheit"
                        }, 
                        {
                            "pattern": "\\|temperature_low_alarm$",
                            "description": "Unit is fahrenheit"
                        }, 
                        {
                            "pattern": "\\|temperature_high_alarm$",
                            "description": "Unit is fahrenheit"
                        }, 
                        {
                            "pattern": "\\|temperature_has_warn$"
                        }, 
                        {
                            "pattern": "\\|temperature_has_alarm$"
                        }, 
                        {
                            "pattern": "\\|tx_bias$",
                            "description": "Unit is mA. If value is available per channel, all channel values are included delimited by a pipe"
                        },
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?tx_bias_int$",
                            "description": "Per channel tx_bias is only available for Cumulus. Unit is mA multiplied by 1000"
                        },
                        {
                            "pattern": "\\|tx_bias_low_warn$",
                            "description": "Unit is mA"
                        }, 
                        {
                            "pattern": "\\|tx_bias_high_warn$",
                            "description": "Unit is mA"
                        }, 
                        {
                            "pattern": "\\|tx_bias_low_alarm$",
                            "description": "Unit is mA"
                        }, 
                        {
                            "pattern": "\\|tx_bias_high_alarm$",
                            "description": "Unit is mA"
                        }, 
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?tx_bias_has_warn$"
                        },
                        {
                            "pattern": "\\|(channel[0-9]+\\|)?tx_bias_has_alarm$"
                        },
                        {
                            "pattern": "\\|voltage$",
                            "description": "Unit is volts"
                        }, 
                        {
                            "pattern": "\\|voltage_low_warn$",
                            "description": "Unit is volts"
                        }, 
                        {
                            "pattern": "\\|voltage_high_warn$",
                            "description": "Unit is volts"
                        }, 
                        {
                            "pattern": "\\|voltage_low_alarm$",
                            "description": "Unit is volts"
                        }, 
                        {
                            "pattern": "\\|voltage_high_alarm$",
                            "description": "Unit is volts"
                        }, 
                        {
                            "pattern": "\\|voltage_has_warn$"
                        }, 
                        {
                            "pattern": "\\|voltage_has_alarm$"
                        }
                    ]
                }
            ], 
            "type": "string"
        }, 
        "value": {
            "description": "Keys ending with has_warn or has_alarm have value '1' to indicate metric is in threshold, '2' to indicate metric is outside the corresponding threshold and '0' to indicate required metric is not available",
            "oneOf": [
                {
                    "type": "string"
                }, 
                {
                    "type": "null"
                }
            ]
        }
    }, 
    "required": [
        "identity", 
        "value"
    ], 
    "type": "object"
}
