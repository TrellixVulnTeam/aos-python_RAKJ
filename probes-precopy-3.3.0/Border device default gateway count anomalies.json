{
  "label": "Border device default gateway count anomalies",
  "processors": [
    {
      "inputs": {},
      "type": "generic_data_collector",
      "name": "Collect default gateway count on border leafs",
      "outputs": {
        "out": "border_device_default_gw_count"
      },
      "properties": {
        "graph_query": [
          "match(  node('system', name='border_device', role=is_in(['leaf', 'spine']), deploy_mode='deploy').out('hosted_sz_instances')  .node('sz_instance', name='szi').in_('instantiated_by')  .node('security_zone', name='sz', sz_type=ne('l3_fabric'), vrf_name=is_in([u'finance']))  .having(    node('system', name='border_device').out('hosted_interfaces')    .node('interface').out('composed_of')    .node('interface', if_type='subinterface').out('link')    .node('link', role='to_external_router'), at_least=1)  .having(    node('system', name='border_device').out('hosted_interfaces')    .node('interface').out('composed_of')    .node('interface', if_type='subinterface').in_('member_interfaces')    .node(name='szi'), at_least=1))"
        ],
        "data_type": "ns",
        "service_interval": "120",
        "service_name": "route_count",
        "execution_count": "-1",
        "system_id": "border_device.system_id",
        "service_input": "\"\"",
        "key": "'%s|0.0.0.0/0' % sz.vrf_name",
        "enable_streaming": false
      }
    },
    {
      "inputs": {
        "in": "border_device_default_gw_count"
      },
      "type": "range_check",
      "name": "Check if default gateway count is as expected",
      "outputs": {
        "out": "mismatched_border_devices"
      },
      "properties": {
        "enable_streaming": false,
        "property": "value",
        "range": {
          "max": 2,
          "min": 2
        },
        "raise_anomaly": false,
        "graph_query": []
      }
    },
    {
      "inputs": {
        "in": "mismatched_border_devices"
      },
      "type": "state_check",
      "name": "Check mismatched border devices",
      "outputs": {
        "out": "check_mismatched_border_devices"
      },
      "properties": {
        "enable_streaming": false,
        "state": "'false'",
        "raise_anomaly": true,
        "graph_query": []
      }
    }
  ]
}